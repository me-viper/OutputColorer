<?xml version="1.0"?>
<doc>
    <assembly>
        <name>OutputColorer</name>
    </assembly>
    <members>
        <member name="T:OutputColorer.Connect">
            <summary>The object for implementing an Add-in.</summary>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:OutputColorer.Connect.#ctor">
            <summary>Implements the constructor for the Add-in object. Place your initialization code within this method.</summary>
        </member>
        <member name="M:OutputColorer.Connect.OnConnection(System.Object,Extensibility.ext_ConnectMode,System.Object,System.Array@)">
            <summary>Implements the OnConnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being loaded.</summary>
            <param term='application'>Root object of the host application.</param>
            <param term='connectMode'>Describes how the Add-in is being loaded.</param>
            <param term='addInInst'>Object representing this Add-in.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:OutputColorer.Connect.OnDisconnection(Extensibility.ext_DisconnectMode,System.Array@)">
            <summary>Implements the OnDisconnection method of the IDTExtensibility2 interface. Receives notification that the Add-in is being unloaded.</summary>
            <param term='disconnectMode'>Describes how the Add-in is being unloaded.</param>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:OutputColorer.Connect.OnAddInsUpdate(System.Array@)">
            <summary>Implements the OnAddInsUpdate method of the IDTExtensibility2 interface. Receives notification when the collection of Add-ins has changed.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />		
        </member>
        <member name="M:OutputColorer.Connect.OnStartupComplete(System.Array@)">
            <summary>Implements the OnStartupComplete method of the IDTExtensibility2 interface. Receives notification that the host application has completed loading.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:OutputColorer.Connect.OnBeginShutdown(System.Array@)">
            <summary>Implements the OnBeginShutdown method of the IDTExtensibility2 interface. Receives notification that the host application is being unloaded.</summary>
            <param term='custom'>Array of parameters that are host application specific.</param>
            <seealso class='IDTExtensibility2' />
        </member>
        <member name="M:OutputColorer.OutputClassifier.GetClassificationSpans(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>
            Classify debug output spans.
            </summary>
            <param name="span">The span of interest in this projection buffer.</param>
            <returns>The list of <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationSpan"/> as contributed by the source buffers.</returns>
        </member>
        <member name="M:OutputColorer.BuildOutputClassifier.GetClassificationSpans(Microsoft.VisualStudio.Text.SnapshotSpan)">
            <summary>
            Classify the given spans, which, for diff files, classifies
            a line at a time.
            </summary>
            <param name="span">The span of interest in this projection buffer.</param>
            <returns>The list of <see cref="T:Microsoft.VisualStudio.Text.Classification.ClassificationSpan"/> as contributed by the source buffers.</returns>
        </member>
        <member name="T:Talk2Bits.OutputColorerInstaller.OutputColorerInstallerPackage">
             <summary>
             This is the class that implements the package exposed by this assembly.
            
             The minimum requirement for a class to be considered a valid package for Visual Studio
             is to implement the IVsPackage interface and register itself with the shell.
             This package uses the helper classes defined inside the Managed Package Framework (MPF)
             to do it: it derives from the Package class that provides the implementation of the 
             IVsPackage interface and uses the registration attributes defined in the framework to 
             register itself and its components with the shell.
             </summary>
        </member>
        <member name="M:Talk2Bits.OutputColorerInstaller.OutputColorerInstallerPackage.#ctor">
            <summary>
            Default constructor of the package.
            Inside this method you can place any initialization code that does not require 
            any Visual Studio service because at this point the package object is created but 
            not sited yet inside Visual Studio environment. The place to do all the other 
            initialization is the Initialize method.
            </summary>
        </member>
        <member name="M:Talk2Bits.OutputColorerInstaller.OutputColorerInstallerPackage.Initialize">
            <summary>
            Initialization of the package; this method is called right after the package is sited, so this is the place
            where you can put all the initilaization code that rely on services provided by VisualStudio.
            </summary>
        </member>
        <member name="T:Talk2Bits.OutputColorerInstaller.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Talk2Bits.OutputColorerInstaller.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Talk2Bits.OutputColorerInstaller.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
    </members>
</doc>
